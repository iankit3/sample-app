{"version":3,"sources":["atoms/FlexContainer.js","atoms/Row.js","atoms/Table.js","molecules/PackageForm.js","pages/context.js","pages/PackageViewer.js","pages/provider.js","App.js","serviceWorker.js","index.js"],"names":["FlexContainer","styled","div","Row","id","name","age","duration","validity","description","setCurrentId","deletePackage","days","nights","onClick","e","Table","children","props","className","border","Label","label","PackageForm","formik","useFormik","initialValues","enableReinitialize","onSubmit","values","json","JSON","stringify","console","log","addPackage","handleSubmit","htmlFor","type","onChange","handleChange","value","placeholder","StyledPackageForm","PackageContext","createContext","initialValue","PackageViewer","useContext","packages","getPackages","useState","currentValue","setCurrentValue","currentId","useEffect","field","filter","p","length","map","key","PACKAGE_URL","PackageProvider","intialState","setPackages","fetch","method","headers","then","raw","Provider","hotelPackage","body","updatePackage","App","initialState","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.8579166f.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nconst FlexContainer = styled.div`\r\n    display: flex;\r\n\r\n`\r\n\r\nexport default FlexContainer;","import React from \"react\";\r\n\r\nconst Row = ({\r\n  id,\r\n  name,\r\n  age,\r\n  duration,\r\n  validity,\r\n  description,\r\n  setCurrentId,\r\n  deletePackage,\r\n}) => {\r\n  return (\r\n    <tr>\r\n      <td>{id}</td>\r\n      <td>{name}</td>\r\n      <td>{age}</td>\r\n      <td>{duration.days} days and {duration.nights} nights</td>\r\n      <td>{validity}</td>\r\n      <td>{description}</td>\r\n      <td>\r\n        <button onClick={(e) => setCurrentId(id)}>Edit</button>\r\n        <button onClick={(e) => deletePackage(id)}>delet</button>\r\n      </td>\r\n    </tr>\r\n  );\r\n};\r\n\r\nexport default Row;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nexport const Table = styled(({ children, ...props }) => {\r\n    return(\r\n        <table className={props.className} border=\"1\">\r\n         {children}\r\n     </table>   \r\n    )\r\n})`\r\n    flex: 1 1 200px;\r\n`;\r\n\r\nexport default Table;\r\n","import React from \"react\";\r\n\r\nimport { useFormik } from \"formik\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Label = styled.label`\r\n    display: block;\r\n    font-weight: 900;\r\n`\r\n\r\nconst PackageForm = (props) => {\r\n  const formik = useFormik({\r\n    initialValues: props.initialValues,\r\n    enableReinitialize: true,\r\n    onSubmit: (values) => {\r\n      let json = JSON.stringify(values, null, 2);\r\n      console.log(json);\r\n      props.addPackage(values)\r\n    },\r\n  });\r\n\r\n  return (\r\n    <form onSubmit={formik.handleSubmit} className={props.className}>\r\n      <Label htmlFor=\"name\">Name</Label>\r\n      <input\r\n        id=\"name\"\r\n        name=\"name\"\r\n        type=\"text\"\r\n        onChange={formik.handleChange}\r\n        value={formik.values.name}\r\n      />\r\n      <br />\r\n      <Label htmlFor=\"age\">Age</Label>\r\n      <input\r\n        id=\"age\"\r\n        name=\"age\"\r\n        type=\"number\"\r\n        onChange={formik.handleChange}\r\n        value={formik.values.age}\r\n      />\r\n      <br />\r\n      <Label htmlFor=\"duration_days\">Duration</Label>\r\n      \r\n      Days:\r\n      <br />\r\n       <input\r\n        id=\"duration_days\"\r\n        name=\"duration.days\"\r\n        type=\"number\"\r\n        onChange={formik.handleChange}\r\n        value={formik.values.duration.days}\r\n        placeholder=\"days\"\r\n      />\r\n      <br />\r\n      Nights:\r\n      <br />\r\n       <input\r\n        id=\"duration_nights\"\r\n        name=\"duration.nights\"\r\n        type=\"number\"\r\n        onChange={formik.handleChange}\r\n        value={formik.values.duration.nights}\r\n        placeholder=\"nights\"\r\n      />\r\n      <br />\r\n      <Label htmlFor=\"validity\">Validity</Label>\r\n      <input\r\n        id=\"validity\"\r\n        name=\"validity\"\r\n        type=\"number\"\r\n        onChange={formik.handleChange}\r\n        value={formik.values.validity}\r\n      />\r\n      <br />\r\n      <Label htmlFor=\"description\">Description</Label>\r\n      <input\r\n        id=\"description\"\r\n        name=\"description\"\r\n        type=\"text\"\r\n        onChange={formik.handleChange}\r\n        value={formik.values.description}\r\n      />\r\n      <br />\r\n      <button type=\"button\" onClick={() => props.setCurrentId(-1)}>Reset</button>\r\n      <button type=\"submit\">Submit</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport const StyledPackageForm = styled(PackageForm)`\r\n    flex: 0 1 200px;\r\n`\r\n\r\nexport default PackageForm;\r\n","import { createContext, useContext } from \"react\";\r\n\r\nexport const PackageContext = createContext();\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport FlexContainer from \"../atoms/FlexContainer\";\r\nimport Row from \"../atoms/Row\";\r\nimport Table, { FormField } from \"../atoms/Table\";\r\nimport { StyledPackageForm } from \"../molecules/PackageForm\";\r\nimport { PackageContext } from \"./context\";\r\nlet initialValue = {\r\n  name: \"\",\r\n  age: 0,\r\n  duration: {\r\n    days: 0,\r\n    nights: 0,\r\n  },\r\n  validity: 0,\r\n  description: \"\",\r\n};\r\n\r\nconst PackageViewer = () => {\r\n  const { packages, getPackages, addPackage, deletePackage } = useContext(PackageContext);\r\n  const [currentValue, setCurrentValue] = useState(initialValue);\r\n  const [currentId, setCurrentId] = useState(-1);\r\n\r\n  useEffect(() => {\r\n    getPackages();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (currentId != -1) {\r\n      let field = packages.filter((p) => p.id === currentId);\r\n      if (field.length > 0) {\r\n        setCurrentValue(field[0]);\r\n      }else setCurrentValue(initialValue)\r\n    }else setCurrentValue(initialValue)\r\n\r\n  }, [currentId]);\r\n\r\n  return (\r\n    <>\r\n      <h2>Packages</h2>\r\n      <FlexContainer>\r\n        <StyledPackageForm\r\n          initialValues={currentValue}\r\n          addPackage={addPackage}\r\n          setCurrentId={setCurrentId}\r\n        />\r\n        <Table>\r\n          <thead>\r\n            <tr>\r\n              <th>Id</th>\r\n              <th>Name</th>\r\n              <th>Age</th>\r\n              <th>Duration</th>\r\n              <th>Validity</th>\r\n              <th>Description</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {packages.map((p) => {\r\n              return (\r\n                <Row\r\n                  {...p}\r\n                  key={p.id}\r\n                  setCurrentId={setCurrentId}\r\n                  deletePackage={deletePackage}\r\n                ></Row>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </Table>\r\n      </FlexContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PackageViewer;\r\n","import React, { useEffect, useState } from 'react';\r\nimport {PackageContext} from './context';\r\n\r\nconst PACKAGE_URL = \"http://localhost:8080/packages/\";\r\nconst PackageProvider = ({intialState, children}) => {\r\n    const [packages, setPackages] = useState([]);\r\n\r\n    let getPackages = () => {\r\n        fetch(PACKAGE_URL, {\r\n            method: \"GET\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        }).then(raw => raw.json())\r\n        .then(json => {\r\n            setPackages(json);\r\n        })\r\n    }\r\n\r\n    let addPackage = (hotelPackage) => {\r\n        fetch(PACKAGE_URL, {\r\n            method: \"POST\",\r\n            body: JSON.stringify(hotelPackage),\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        }).then(raw => raw.json())\r\n        .then(getPackages);\r\n    }\r\n\r\n    let updatePackage = (id, hotelPackage) => {\r\n        fetch(PACKAGE_URL, {\r\n            method: \"PUT\",\r\n            body: JSON.stringify({id, hotelPackage}),\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        }).then(raw => raw.json())\r\n        .then(getPackages);\r\n    }\r\n    \r\n    let deletePackage = (id) => {\r\n        fetch(`${PACKAGE_URL}/${id}`, {\r\n            method: \"DELETE\",\r\n            body: JSON.stringify({id}),\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        }).then(raw => raw.json())\r\n        .then(getPackages);\r\n    }\r\n\r\n    return(\r\n        <PackageContext.Provider value={{\r\n            packages: packages,\r\n            getPackages: getPackages,\r\n            addPackage: addPackage,\r\n            updatePackage: updatePackage,\r\n            deletePackage: deletePackage\r\n        }}>\r\n            {children}\r\n        </PackageContext.Provider>\r\n    )\r\n}\r\n\r\nexport default PackageProvider;","import React from 'react';\nimport './App.css';\nimport PackageViewer from './pages/PackageViewer';\nimport PackageProvider from './pages/provider';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <PackageProvider initialState={{}}>\n        <PackageViewer />\n      </PackageProvider>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}